- name: Criando o Security Group
  ec2_group: # Gerenciamento da nossa vpc
    name: "{{ security_name }}"
    description: sg with rule descriptions
    profile: "{{ aws_profile }}"
    region: "{{ region }}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: SSH
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando instancia EC2
  ec2_instance: # mesma coisa de passar o module: ec2
    security_group: "{{ security_name }}"
    instance_type: "{{ instance_type }}"
    image_id: "{{ image }}"
    network:
      assign_public_ip: true
    profile: "{{ aws_profile }}"
    wait: yes
    region: "{{ region }}"
    key_name: "{{ keypair }}"
    count: "{{ count }}"
  register: ec2

- name: print ec2.instance
  debug:
    msg: "{{ item }}"
  with_items: "{{ec2.instances}}"
  
- name: Adicionando a instancia ao inventario temporario
  add_host: name={{ item.public_ip_address }} groups=group_temp
  with_items: "{{ ec2.instances }}"


- name: Adicionando o ip public da instancia criada ao arquivo hosts
  lineinfile:
    dest: "./hosts"
    regexp: "{{ item.public_ip_address }}"
    insertafter: "[kubernetes]" 
    line: "{{ item.public_ip_address }}"
  with_items: "{{ ec2.instances }}" 

- name: Adicionando o ip privado da instancia ao arquivo hosts
  lineinfile:
    dest: "./hosts"
    regexp: "{{ item.private_ip_address }}"
    insertafter: "[kubernetes]" 
    line: "{{ item.private_ip_address }}"
  with_items: "{{ ec2.instances }}"

- name: Esperando ssh
  wait_for:
    host: "{{ item.public_ip_address }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"

- name: Add tag instances
  ec2_tag:
    resource: "{{ item.instance_id }}" 
    region: "{{ region }}" 
    profile: "{{ aws_profile }}" 
    state: present 
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: ansible-{{ item.ami_launch_index|int + 1 }}


      
      
      


